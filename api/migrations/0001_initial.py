# Generated by Django 4.2 on 2024-02-18 04:58

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("name", models.CharField(max_length=150)),
                ("username", models.CharField(max_length=150, unique=True)),
                ("password", models.CharField(max_length=150)),
                (
                    "role",
                    models.CharField(
                        choices=[("adm", "Admin"), ("emp", "Employee")], max_length=3
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="AdditionalFee",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("description", models.CharField(max_length=200)),
                ("amount", models.DecimalField(decimal_places=2, max_digits=9)),
            ],
        ),
        migrations.CreateModel(
            name="Bike",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("model_name", models.CharField(max_length=200)),
                ("model_code", models.CharField(max_length=100)),
                ("engine", models.CharField(max_length=100, null=True)),
                ("chassi", models.CharField(max_length=100, unique=True)),
                ("registration_plate", models.CharField(max_length=20, null=True)),
                ("color", models.CharField(max_length=50, null=True)),
                ("notes", models.TextField(blank=True, null=True)),
                (
                    "category",
                    models.CharField(
                        choices=[("new", "New"), ("pre_owned", "Pre-owned")],
                        default="new",
                        max_length=10,
                    ),
                ),
                (
                    "sale_price",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=9, null=True
                    ),
                ),
                (
                    "wholesale_price",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=9, null=True
                    ),
                ),
                (
                    "wholesale_price_net",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=9, null=True
                    ),
                ),
                ("received_date", models.DateField(null=True)),
                ("sold", models.BooleanField(default=False)),
                (
                    "brand",
                    models.CharField(
                        choices=[
                            ("Honda", "Honda"),
                            ("Yamaha", "Yamaha"),
                            ("GPX", "GPX"),
                        ],
                        default="Honda",
                        max_length=10,
                        null=True,
                    ),
                ),
                (
                    "invoice_number",
                    models.CharField(blank=True, default="", max_length=100, null=True),
                ),
                (
                    "invoice_picture",
                    models.ImageField(
                        blank=True, null=True, upload_to="invoices/%Y/%m/"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Customer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("id_card_number", models.CharField(max_length=13)),
                ("age", models.IntegerField()),
                ("dob", models.DateField(null=True)),
                ("address", models.CharField(max_length=200)),
                ("district", models.CharField(max_length=200, null=True)),
                ("subdistrict", models.CharField(max_length=200, null=True)),
                ("province", models.CharField(max_length=200, null=True)),
                (
                    "gender",
                    models.CharField(
                        choices=[("ML", "Male"), ("FL", "Female"), ("OT", "Other")],
                        max_length=2,
                    ),
                ),
                ("phone", models.CharField(max_length=12)),
            ],
        ),
        migrations.CreateModel(
            name="Storage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("storage_name", models.CharField(max_length=200)),
                ("address", models.CharField(max_length=200)),
                ("phone", models.CharField(max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name="StorageTransfer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("transfer_date", models.DateField(auto_now_add=True)),
                ("bikes", models.ManyToManyField(to="api.bike")),
                (
                    "destination",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="destination_transfer",
                        to="api.storage",
                    ),
                ),
                (
                    "origin",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="origin_transfer",
                        to="api.storage",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Order",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("sale_date", models.DateField()),
                ("total_price", models.FloatField(default=0)),
                ("discount", models.IntegerField(default=0)),
                ("down_payment", models.FloatField(default=0, null=True)),
                ("commission", models.FloatField(blank=True, default=0, null=True)),
                ("total", models.FloatField(default=0, null=True)),
                ("payment_method", models.CharField(max_length=50)),
                ("notes", models.TextField(blank=True, null=True)),
                (
                    "registration_status",
                    models.CharField(
                        choices=[("CPL", "Complete"), ("IPL", "Incomplete")],
                        max_length=3,
                    ),
                ),
                ("has_checkout", models.BooleanField(default=False)),
                (
                    "additional_fees",
                    models.ManyToManyField(blank=True, to="api.additionalfee"),
                ),
                ("bikes", models.ManyToManyField(to="api.bike")),
                (
                    "customer",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="api.customer",
                    ),
                ),
                (
                    "seller",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="bike",
            name="storage_place",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="api.storage",
            ),
        ),
    ]
